{"version":3,"file":"cap-angular-contentful.js","sources":["ng://cap-angular-contentful/lib/services/config.service.ts","ng://cap-angular-contentful/lib/services/contentful.service.ts","ng://cap-angular-contentful/lib/contentful.module.ts","ng://cap-angular-contentful/cap-angular-contentful.ts"],"sourcesContent":["import ConfigInterface from '../interfaces/config.interface';\nimport { Injectable } from '@angular/core';\n\nexport class ConfigService {\n  space_id: string = '';\n  environment: string = '';\n  delivery_accessToken: string = '';\n\n  constructor(private data: ConfigInterface) {\n\n    if (this.data) {\n      this.space_id = this.data.space_id;\n      this.environment = this.data.environment;\n      this.delivery_accessToken = this.data.delivery_accessToken;\n\n    }\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { ConfigService } from './config.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\n\nexport class CapContentfulService {\n\n  private baseUrl: string;\n  private httpOptions: any;\n\n  constructor(\n    private _http: HttpClient,\n    private credentials: ConfigService) {\n      if(credentials){\n        this.httpOptions = {\n          headers: new HttpHeaders({\n            'Authorization': `Bearer ${credentials.delivery_accessToken}`,\n            'Content-Type': 'application/vnd.contentful.delivery.v1+json'\n          }),\n          observe: \"response\"\n        };\n        this.baseUrl = `https://cdn.contentful.com/spaces/${this.credentials.space_id}/environments/${this.credentials.environment}/`;\n      }\n  }\n\n\n  /**\n * Return the items related with a specific content type\n * @param contentType String\n * @param limit Optional(Number)\n * @param skip Optional(Number)\n*/\n  getItems(contentType: string, limit?: number, skip?: number): Observable<any> {\n    limit ? limit = limit : limit = 100;\n    skip ? skip = skip : skip = 0;\n    const _url = `${this.baseUrl}entries?content_type=${contentType}&limit=${limit}&skip=${skip}`;\n    return this._http.get<any>(_url, this.httpOptions)\n      .pipe(\n        map((response: any) => response.body),\n        tap((response: any) => {\n\n          return response;\n        }),\n        catchError(error => this.handleError(error))\n      );\n  }\n\n  /**\n * Return a specific item by Id\n * @param entryId String\n*/\n  getItemById(entryId: string): Observable<any> {\n    let _url = `${this.baseUrl}entries/${entryId}`\n\n    return this._http.get<any>(_url, this.httpOptions)\n      .pipe(\n        map((response: any) => response.body),\n        tap((response: any) => response),\n        catchError(error => this.handleError(error))\n      );\n  }\n\n  private handleError(error: any) {\n    console.error(error);\n    return throwError(error || 'Server error');\n  }\n\n  /**\n * Return a list of items related with a specific content type\n * @param contentType String\n * @param limit Optional(Number)\n * @param skip Optional(Number)\n*/\n  getElementsByContentType(contentType: string, limit?: number, skip?: number) {\n    limit ? limit = limit : limit = 100;\n    skip ? skip = skip : skip = 0;\n    let _url = `${this.baseUrl}entries?content_type=${contentType}&limit=${limit}&skip=${skip}`\n    return this._http.get<any>(_url, this.httpOptions)\n      .pipe(\n        map((response: any) => response.body),\n        tap((response: any) => response),\n        catchError(error => this.handleError(error))\n      );\n  }\n\n  /**\n * Return an item related with a specific assetId\n * @param assetId String\n*/\n  getAsset(assetId: string) {\n    let _url = `${this.baseUrl}assets/${assetId}`;\n\n    return this._http.get<any>(_url, this.httpOptions)\n      .pipe(\n        map((response: any) => response.body),\n        catchError(error => this.handleError(error))\n      );\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ConfigService } from './services/config.service';\nimport { CommonModule } from \"@angular/common\";\nimport ConfigInterface from './interfaces/config.interface';\nimport { CapContentfulService } from './services/contentful.service';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    HttpClientModule,\n    CommonModule,\n  ],\n  exports: [],\n  providers: [\n    CapContentfulService\n  ],\n  schemas: []\n})\nexport class CapContentfulModule {\n  static forRoot(config: ConfigInterface): ModuleWithProviders {\n    return {\n      ngModule: CapContentfulModule,\n      providers: [\n        {\n          provide: ConfigService,\n          useValue: config\n        },\n      ]\n    };\n  }\n}\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}