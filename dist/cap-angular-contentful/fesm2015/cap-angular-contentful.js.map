{"version":3,"file":"cap-angular-contentful.js","sources":["ng://cap-angular-contentful/lib/interfaces/config.interface.ts","ng://cap-angular-contentful/lib/services/config.service.ts","ng://cap-angular-contentful/lib/services/contentful.service.ts","ng://cap-angular-contentful/lib/contentful.module.ts"],"sourcesContent":["export default interface ConfigInterface {\n  space_id: string;\n  environment: string;\n  delivery_accessToken: string;\n}","import ConfigInterface from '../interfaces/config.interface';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ConfigService {\n  space_id: string = '';\n  environment: string = '';\n  delivery_accessToken: string = '';\n\n  constructor( data: ConfigInterface) {\n\n    if (data) {\n      this.space_id = data.space_id;\n      this.environment = data.environment;\n      this.delivery_accessToken = data.delivery_accessToken;\n\n    }\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { ConfigService } from './config.service';\n\nexport class CapContentfulService {\n\n  private baseUrl: string;\n  private httpOptions: any;\n\n  constructor(\n    private _http: HttpClient,\n    private credentials: ConfigService) {\n      if(credentials){\n        this.httpOptions = {\n          headers: new HttpHeaders({\n            'Authorization': `Bearer ${credentials.delivery_accessToken}`,\n            'Content-Type': 'application/vnd.contentful.delivery.v1+json'\n          }),\n          observe: \"response\"\n        };\n        this.baseUrl = `https://cdn.contentful.com/spaces/${this.credentials.space_id}/environments/${this.credentials.environment}/`;\n      }\n  }\n\n\n  /**\n * Return the items related with a specific content type\n * @param contentType String\n * @param limit Optional(Number)\n * @param skip Optional(Number)\n*/\n  getItems(contentType: string, limit?: number, skip?: number): Observable<any> {\n    limit ? limit = limit : limit = 100;\n    skip ? skip = skip : skip = 0;\n    const _url = `${this.baseUrl}entries?content_type=${contentType}&limit=${limit}&skip=${skip}`;\n    return this._http.get<any>(_url, this.httpOptions)\n      .pipe(\n        map((response: any) => response.body),\n        tap((response: any) => {\n\n          return response;\n        }),\n        catchError(error => this.handleError(error))\n      );\n  }\n\n  /**\n * Return a specific item by Id\n * @param entryId String\n*/\n  getItemById(entryId: string): Observable<any> {\n    let _url = `${this.baseUrl}entries/${entryId}`\n\n    return this._http.get<any>(_url, this.httpOptions)\n      .pipe(\n        map((response: any) => response.body),\n        tap((response: any) => response),\n        catchError(error => this.handleError(error))\n      );\n  }\n\n  private handleError(error: any) {\n    console.error(error);\n    return throwError(error || 'Server error');\n  }\n\n  /**\n * Return a list of items related with a specific content type\n * @param contentType String\n * @param limit Optional(Number)\n * @param skip Optional(Number)\n*/\n  getElementsByContentType(contentType: string, limit?: number, skip?: number) {\n    limit ? limit = limit : limit = 100;\n    skip ? skip = skip : skip = 0;\n    let _url = `${this.baseUrl}entries?content_type=${contentType}&limit=${limit}&skip=${skip}`\n    return this._http.get<any>(_url, this.httpOptions)\n      .pipe(\n        map((response: any) => response.body),\n        tap((response: any) => response),\n        catchError(error => this.handleError(error))\n      );\n  }\n\n  /**\n * Return an item related with a specific assetId\n * @param assetId String\n*/\n  getAsset(assetId: string) {\n    let _url = `${this.baseUrl}assets/${assetId}`;\n\n    return this._http.get<any>(_url, this.httpOptions)\n      .pipe(\n        map((response: any) => response.body),\n        catchError(error => this.handleError(error))\n      );\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ConfigService } from './services/config.service';\nimport { CommonModule } from \"@angular/common\";\nimport ConfigInterface from './interfaces/config.interface';\nimport { CapContentfulService } from './services/contentful.service';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    HttpClientModule,\n    CommonModule,\n  ],\n  exports: [],\n  providers: [\n    CapContentfulService\n  ],\n  schemas: []\n})\nexport class CapContentfulModule {\n  static forRoot(config: ConfigInterface): ModuleWithProviders {\n    return {\n      ngModule: CapContentfulModule,\n      providers: [\n        {\n          provide: ConfigService,\n          useValue: config\n        },\n      ]\n    };\n  }\n}\n\n"],"names":[],"mappings":"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"}