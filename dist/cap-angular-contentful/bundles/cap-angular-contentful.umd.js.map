{"version":3,"file":"cap-angular-contentful.umd.js","sources":["ng://cap-angular-contentful/lib/services/config.service.ts","ng://cap-angular-contentful/lib/services/contentful.service.ts","ng://cap-angular-contentful/lib/contentful.module.ts"],"sourcesContent":["import ConfigInterface from '../interfaces/config.interface';\nimport { Injectable } from '@angular/core';\n\nexport class ConfigService {\n  space_id: string = '';\n  environment: string = '';\n  delivery_accessToken: string = '';\n\n  constructor(private data: ConfigInterface) {\n\n    if (this.data) {\n      this.space_id = this.data.space_id;\n      this.environment = this.data.environment;\n      this.delivery_accessToken = this.data.delivery_accessToken;\n\n    }\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { ConfigService } from './config.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\n\nexport class CapContentfulService {\n\n  private baseUrl: string;\n  private httpOptions: any;\n\n  constructor(\n    private _http: HttpClient,\n    private credentials: ConfigService) {\n      if(credentials){\n        this.httpOptions = {\n          headers: new HttpHeaders({\n            'Authorization': `Bearer ${credentials.delivery_accessToken}`,\n            'Content-Type': 'application/vnd.contentful.delivery.v1+json'\n          }),\n          observe: \"response\"\n        };\n        this.baseUrl = `https://cdn.contentful.com/spaces/${this.credentials.space_id}/environments/${this.credentials.environment}/`;\n      }\n  }\n\n\n  /**\n * Return the items related with a specific content type\n * @param contentType String\n * @param limit Optional(Number)\n * @param skip Optional(Number)\n*/\n  getItems(contentType: string, limit?: number, skip?: number): Observable<any> {\n    limit ? limit = limit : limit = 100;\n    skip ? skip = skip : skip = 0;\n    const _url = `${this.baseUrl}entries?content_type=${contentType}&limit=${limit}&skip=${skip}`;\n    return this._http.get<any>(_url, this.httpOptions)\n      .pipe(\n        map((response: any) => response.body),\n        tap((response: any) => {\n\n          return response;\n        }),\n        catchError(error => this.handleError(error))\n      );\n  }\n\n  /**\n * Return a specific item by Id\n * @param entryId String\n*/\n  getItemById(entryId: string): Observable<any> {\n    let _url = `${this.baseUrl}entries/${entryId}`\n\n    return this._http.get<any>(_url, this.httpOptions)\n      .pipe(\n        map((response: any) => response.body),\n        tap((response: any) => response),\n        catchError(error => this.handleError(error))\n      );\n  }\n\n  private handleError(error: any) {\n    console.error(error);\n    return throwError(error || 'Server error');\n  }\n\n  /**\n * Return a list of items related with a specific content type\n * @param contentType String\n * @param limit Optional(Number)\n * @param skip Optional(Number)\n*/\n  getElementsByContentType(contentType: string, limit?: number, skip?: number) {\n    limit ? limit = limit : limit = 100;\n    skip ? skip = skip : skip = 0;\n    let _url = `${this.baseUrl}entries?content_type=${contentType}&limit=${limit}&skip=${skip}`\n    return this._http.get<any>(_url, this.httpOptions)\n      .pipe(\n        map((response: any) => response.body),\n        tap((response: any) => response),\n        catchError(error => this.handleError(error))\n      );\n  }\n\n  /**\n * Return an item related with a specific assetId\n * @param assetId String\n*/\n  getAsset(assetId: string) {\n    let _url = `${this.baseUrl}assets/${assetId}`;\n\n    return this._http.get<any>(_url, this.httpOptions)\n      .pipe(\n        map((response: any) => response.body),\n        catchError(error => this.handleError(error))\n      );\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ConfigService } from './services/config.service';\nimport { CommonModule } from \"@angular/common\";\nimport ConfigInterface from './interfaces/config.interface';\nimport { CapContentfulService } from './services/contentful.service';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    HttpClientModule,\n    CommonModule,\n  ],\n  exports: [],\n  providers: [\n    CapContentfulService\n  ],\n  schemas: []\n})\nexport class CapContentfulModule {\n  static forRoot(config: ConfigInterface): ModuleWithProviders {\n    return {\n      ngModule: CapContentfulModule,\n      providers: [\n        {\n          provide: ConfigService,\n          useValue: config\n        },\n      ]\n    };\n  }\n}\n\n"],"names":["HttpHeaders","map","tap","catchError","throwError","Injectable","HttpClientModule","CommonModule","NgModule"],"mappings":"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"}